{
	"info": {
		"_postman_id": "568741bb-5f32-4b9d-99fc-fd0155577c1f",
		"name": "spotlight-casting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "casting-assistant",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6a7c44b-4e42-4e65-8920-64ba2b04b57d",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"the mhjkjkjale\",\n    \"release_date\": \"2018-03-29\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5c9719a-9dce-4de5-ae32-193c38ccc14d",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 24,\n    \"gender\": \"male\",\n    \"name\": \"john\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Kitten\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3233f4d5-5fe8-445f-b1a9-e624c80420fc",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Frank\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccfc151e-9362-4e72-9cf0-4d003ec5bcbc",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93f3f596-0c77-4a09-8484-9520012ddd92",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Can view actors and movies",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlOGNlNzQyNjkwY2YwZTBiOGMyIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjA0MzU0LCJleHAiOjE1ODM2OTA3NTQsImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.Ou-t-Xs_6sjyI0ypEcm_FW2GmsHUIFV59C_nppWfV8rkQs2YI83czto3KY8vEiTwi4JjCheARDURGDZUIS04u2TlRcHx24Aa-uj69LICEqLHwlNqo9PuI-rT3vU_khGaTsGZwg_N_s372hDay8yDNZyixy0zx89qFQQ6mAn849TsOh0Zp3ourJcD2S5dthRTby65f75oS16Jy7z1-MsdbQFHZSB88Ki07svumiCtdJmrz0LdsL3Pqx4gqT3eUov35F0Uf_oLKDmqK8LWtCCOAS5CkKGNREWI3KmAmpXnn42p_cguP4xLYzpJrBRoexWwKtYYa3uiLELIa8752ZxevA",
						"type": "string"
					},
					{
						"key": "tokenType",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c5e8b7b-308b-4b51-9305-bfb029767a12",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "26710797-097a-4221-b87c-b6c281e00341",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "executive-producer",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6a7c44b-4e42-4e65-8920-64ba2b04b57d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" var jsonData = pm.response.json();",
									" var lastId=jsonData.movies.last().id",
									"postman.setEnvironmentVariable(\"movie_id\", lastId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"the mhjkjkjale\",\n    \"release_date\": \"2018-03-29\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5c9719a-9dce-4de5-ae32-193c38ccc14d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" var jsonData = pm.response.json();",
									" var lastId=jsonData.actors.last().id",
									"postman.setEnvironmentVariable(\"actor_id\", lastId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 24,\n    \"gender\": \"male\",\n    \"name\": \"john\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Kitten\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3233f4d5-5fe8-445f-b1a9-e624c80420fc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Frank\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccfc151e-9362-4e72-9cf0-4d003ec5bcbc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93f3f596-0c77-4a09-8484-9520012ddd92",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies for the casting director tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6a7c44b-4e42-4e65-8920-64ba2b04b57d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" var jsonData = pm.response.json();",
									" var lastId=jsonData.movies.last().id",
									"postman.setEnvironmentVariable(\"movie_id\", lastId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"the mhjkjkjale\",\n    \"release_date\": \"2018-03-29\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"description": "Can view actors and movies",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlZjNlN2FlZGEwZDAxNmUxNGZhIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjAzNjU5LCJleHAiOjE1ODM2OTAwNTksImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIiwicG9zdDptb3ZpZXMiXX0.SEMwnQPTW02j6vyMVW89n7hJfTbUPfpJQrK0HIQtmEFutMXbkxQGLVRWRl27J9nHTkkh9CnOkW3PX5n9CBzmOJqPWbwjGO3yffHQPp9sgMffOsrkm55W-NDzp76csx-jaApPZQUlpLOlqhrF4Hj_Jsfl5ASp_1PTnXNeld8wRvcGLlOTfdG82pKZNQgKoWaA8xceuTySPZd21fCbqziEI__4zoOjFWc03biBTwXK7GxRJzAvIbqBnLuPrOhtUcXqOIF-NH6v8LEjE1qit6-ld42XN1veYUe4gS3lLQUjgqp-29JVcjGMzEYbIGwo6tK0_HcYhefOj5XUgdLXI8jFrQ",
						"type": "string"
					},
					{
						"key": "tokenType",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c5e8b7b-308b-4b51-9305-bfb029767a12",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "26710797-097a-4221-b87c-b6c281e00341",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "casting-director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faa5e094-268a-4113-a779-52e8d4ba1c43",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlYzNlZDUxMDQwY2Y0MmZhYjhjIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjAxMjczLCJleHAiOjE1ODM2ODc2NzMsImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.PffN35rVsuyHLTFqP8ZrKn4x5QbvU9x5XxsioyN-weDSOGWu5XmGNK7pHLfKo8vWJ_MUQukz-2CU-VsAESws7ouC_JlTCFszVvOO1iZCVFjhYOjtZT_XRFrgH9kNC8xW8IKUzAweOSxKqPP5NyHuUUUScYQOMvGacZwRJrlRm-N-JTxMwtSddRf4x7s_Mm31q0MI1BLQidNfaDeKlAMb8zMfX8au_UO88LU3vdtaOI4yXmOfmMQBuLt4001iGw_312K0edZwLah4LyzJJUm_JpKEv0BacANekZBS0j8DxhoP1B_qKv-0CgwoIQurIlLq-a051CCBl4OzFyXI7DGfSA",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6a7c44b-4e42-4e65-8920-64ba2b04b57d",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlYzNlZDUxMDQwY2Y0MmZhYjhjIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjAxMjczLCJleHAiOjE1ODM2ODc2NzMsImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.PffN35rVsuyHLTFqP8ZrKn4x5QbvU9x5XxsioyN-weDSOGWu5XmGNK7pHLfKo8vWJ_MUQukz-2CU-VsAESws7ouC_JlTCFszVvOO1iZCVFjhYOjtZT_XRFrgH9kNC8xW8IKUzAweOSxKqPP5NyHuUUUScYQOMvGacZwRJrlRm-N-JTxMwtSddRf4x7s_Mm31q0MI1BLQidNfaDeKlAMb8zMfX8au_UO88LU3vdtaOI4yXmOfmMQBuLt4001iGw_312K0edZwLah4LyzJJUm_JpKEv0BacANekZBS0j8DxhoP1B_qKv-0CgwoIQurIlLq-a051CCBl4OzFyXI7DGfSA",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"the mhjkjkjale\",\n    \"release_date\": \"2018-03-29\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5c9719a-9dce-4de5-ae32-193c38ccc14d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" var jsonData = pm.response.json();",
									" var lastId=jsonData.actors.last().id",
									"postman.setEnvironmentVariable(\"actor_id\", lastId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 24,\n    \"gender\": \"male\",\n    \"name\": \"john\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Kitten\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3233f4d5-5fe8-445f-b1a9-e624c80420fc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Frank\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccfc151e-9362-4e72-9cf0-4d003ec5bcbc",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93f3f596-0c77-4a09-8484-9520012ddd92",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlYzNlZDUxMDQwY2Y0MmZhYjhjIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjA1MTczLCJleHAiOjE1ODM2OTE1NzMsImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.Uxmzmbf_0nDQo5SnygNMWJHKTNRJwkZFS70ixxYY4wuG62iPWnjt62pjqkYsOvpevyOsUcVdV_4CB6KrCLUDrkuXWn4VsAFLURapphOJB4xByZ_bGIyzQWSGXL195g1kReGbD-X5_54hagxWD2SruEK-xw7pBGP7Kj9wr32Mm4sofUeQPzzOes5cficV_AcZTh7_DuF61ed0Ub1gk30yNx3Zeq5U0kPEdwaVS754uWY53E-tUEeUV-4vrQ9Jb8-Y9BI_WBn8--JNHEBUQL_wCf5bz-XF5Kz3mjhmE5_u2lfW8jxYsvfuIyAfE1VWWY_LMSCFlDsrokBjlcgEf2hqMg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{actor_id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Can view actors and movies",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5FUXhRVVpETVRkRE9FVTBNemN6TnpRd1JFRkdOak0xTlRCQk5VUTBNREpCUXpRMk5VVkJSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1tbmw0aTIweS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWU1ZmNlYzNlZDUxMDQwY2Y0MmZhYjhjIiwiYXVkIjoic3BvdGxpZ2h0IiwiaWF0IjoxNTgzNjA1MTczLCJleHAiOjE1ODM2OTE1NzMsImF6cCI6ImNlc1hBSnd0U3JxRUN1UE16b2JuVkdKUUxxS1lzaDhwIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.Uxmzmbf_0nDQo5SnygNMWJHKTNRJwkZFS70ixxYY4wuG62iPWnjt62pjqkYsOvpevyOsUcVdV_4CB6KrCLUDrkuXWn4VsAFLURapphOJB4xByZ_bGIyzQWSGXL195g1kReGbD-X5_54hagxWD2SruEK-xw7pBGP7Kj9wr32Mm4sofUeQPzzOes5cficV_AcZTh7_DuF61ed0Ub1gk30yNx3Zeq5U0kPEdwaVS754uWY53E-tUEeUV-4vrQ9Jb8-Y9BI_WBn8--JNHEBUQL_wCf5bz-XF5Kz3mjhmE5_u2lfW8jxYsvfuIyAfE1VWWY_LMSCFlDsrokBjlcgEf2hqMg",
						"type": "string"
					},
					{
						"key": "tokenType",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c5e8b7b-308b-4b51-9305-bfb029767a12",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "26710797-097a-4221-b87c-b6c281e00341",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cdecc92c-7f8b-414d-8d1e-1f9fee2716cf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "39dbcb39-79d7-42a1-9831-24537227c821",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "213290f5-22c1-418a-95e5-8eaa14307cee",
			"key": "host",
			"value": "https://warm-depths-06997.herokuapp.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}